<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Tank you</title>
</head>
<body>
	<script src="bower/phaser/build/phaser.js"></script>
	<script src="bower/phaser-tiled/dist/phaser-tiled.js"></script>
	<script src="bower/gsap/src/uncompressed/TweenMax.js"></script>
	<script>
	var game = new Phaser.Game(3200, 3200, Phaser.AUTO, '', { preload: preload, create: create, update: update });
	var map;
	var layer;
	var tankContainer;
	var tankTurret,tankBody,aimLeft;

		function preload() {


			game.load.tilemap('map','static/map/basic_desert.json',null, Phaser.Tilemap.TILED_JSON);
			game.load.image('tiles','static/map/14389890_10101464731169187_1920077060_n.jpg');
			game.load.atlas('tanks','static/images/tanktiles.png','static/images/tanks.json',Phaser.Loader.TEXTURE_ATLAS_JSON_HASH);

			// game.load.image("t4Body.png"):
			// game.load.image("t4Turret.png"):
			// game.load.tilemap('mario', 'static/map/super_mario.json', null, Phaser.Tilemap.TILED_JSON);
			// game.load.image('tiles', 'static/map/super_mario.png');
		}

		function create() {
			 game.stage.backgroundColor = '#787878';




	// tankContainer.x = 32;
	// 		tankContainer.y = 200;
	// 		tankContainer.rv = 0;
	// 		tankContainer.maxSpeed = 2;
	// 		tankContainer.accel = 4;
	// 		tankContainer.forward = tankContainer.reverse = false;

	// 		tankTurret.x = 19;
	// 		tankTurret.y = 30;
	// 		tankTurret.pivot.set(12.5,55);


			 // tankContainer.add.sprite(19,30,'tanks','t4Turret.png');
			 // map = game.add.tilemap('mario');

			 // map.addTilesetImage('SuperMarioBros-World1-1','tiles');
			 // layer = map.createLayer('World1');
			 map = game.add.tilemap('map');

			 map.addTilesetImage('Desert','tiles');

			 layer = map.createLayer('Tile Layer 1');
			layer.resizeWorld();


			 tankTurret = game.add.sprite(32,85,'tanks','t4Turret.png');
			 tankBody = game.add.sprite(13,55,'tanks','t4Body.png');
			 tankContainer = game.add.group();
			 tankContainer.add(tankBody);
			 tankContainer.add(tankTurret);
			 tankTurret.pivot.set(12.5,55);
			 tankContainer.maxSpeed = 2;
			 tankContainer.accel = 0.5;
			tankTurret.rv = 0;
			tankContainer.rv = 0;
			tankContainer.vx = 0;
			tankContainer.x = 400;
			tankContainer.vy = 0;
			tankContainer.y = 400;
			
			tankContainer.forward = false;
			tankContainer.reverse = false;
			// game.add.sprite(0,0,'tanks');

			aimLeft = game.input.keyboard.addKey(Phaser.Keyboard.LEFT);
    		aimLeft.onDown.add(function(){
    			tankTurret.rv = -0.025;
    		});
    		aimLeft.onUp.add(function(){
    			if (!aimRight.isDown) {
				    tankTurret.rv = 0;
			    }
    		});

    		var aimRight = game.input.keyboard.addKey(Phaser.Keyboard.RIGHT);
    		aimRight.onDown.add(function(){
    			tankTurret.rv = 0.025;
    		});
    		aimRight.onUp.add(function(){
    			if (!aimRight.isDown) {
				    tankTurret.rv = 0;
			    }
    		});

		   //Up
		  var forward = game.input.keyboard.addKey(Phaser.Keyboard.W);
		  var left = game.input.keyboard.addKey(Phaser.Keyboard.A);
		  var right = game.input.keyboard.addKey(Phaser.Keyboard.D);
		  var backward = game.input.keyboard.addKey(Phaser.Keyboard.S);

	 	forward.onDown.add(function(){
			 tankContainer.forward = true;
		});
		forward.onUp.add(function(){
			 tankContainer.forward = false;
		});
		
		backward.onDown.add(function(){
			 tankContainer.reverse = true;
		});
		backward.onUp.add(function(){
			 tankContainer.reverse = false;
		});
		  //Right

		right.onDown.add(function(){
			 tankContainer.rv = 0.025;
		});
		right.onUp.add(function(){
			 if (!left.isDown) {
			    tankContainer.rv = 0;
		    }
		});

		left.onDown.add(function(){
			 tankContainer.rv = -0.025;
		});
		left.onUp.add(function(){
			 if (!right.isDown) {
			    tankContainer.rv = 0;
		    }
		});
		tankContainer.pivot.set(30,80);

		}
		var spriteDirection = -1.5708;
		function update() {


		  tankContainer.x += tankContainer.vx;
		  tankContainer.y += tankContainer.vy
		  tankContainer.rotation = tankContainer.rotation + tankContainer.rv;
		  tankTurret.rotation = tankTurret.rotation + tankTurret.rv;

		  if(tankContainer.forward)
		  {
		  	tankContainer.vx = Math.cos(tankContainer.rotation);

		  	// console.log('forwards?');
		  	TweenLite.to(tankContainer,tankContainer.accel,{vx:tankContainer.maxSpeed * Math.cos(tankContainer.rotation+spriteDirection)});
		  	TweenLite.to(tankContainer,tankContainer.accel,{vy:tankContainer.maxSpeed * Math.sin(tankContainer.rotation+spriteDirection)});
		    // tankContainer.vy = Math.sin(tankContainer.rotation);
		  }
		  else if(tankContainer.reverse)
		  {
  		  // 	tankContainer.vx = -Math.cos(tankContainer.rotation);
		    // tankContainer.vy = -Math.sin(tankContainer.rotation);	

		    TweenLite.to(tankContainer,tankContainer.accel,{vx:(tankContainer.maxSpeed/2) * -Math.cos(tankContainer.rotation+spriteDirection),ease:Expo.easeOut});
		  	TweenLite.to(tankContainer,tankContainer.accel,{vy:(tankContainer.maxSpeed/2) * -Math.sin(tankContainer.rotation+spriteDirection),ease:Expo.easeOut});
		  }
		  else
		  {
		  	TweenMax.killAll();

		  	TweenLite.to(tankContainer,1,{vx:0});
		  	TweenLite.to(tankContainer,1,{vy:0});

		  }


		}
	</script>
</body>
</html>